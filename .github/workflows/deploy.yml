name: Deploy Infrastructure & Configure Server

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Upload Terraform working dir
        uses: actions/upload-artifact@v4
        with:
          name: terraform-dir
          path: ./terraform

      - name: Vérifier que Prometheus tourne
        ansible.builtin.shell: systemctl is-active prometheus
        register: prometheus_status
        ignore_errors: true

      - name: Afficher le statut
        ansible.builtin.debug:
          var: prometheus_status.stdout

  ansible:
    name: Run Ansible
    runs-on: ubuntu-latest
    needs: terraform

    env:
      ANSIBLE_HOST_KEY_CHECKING: "False"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Terraform working dir
        uses: actions/download-artifact@v4
        with:
          name: terraform-dir
          path: ./terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Debug afficher fichiers Terraform
        working-directory: ./terraform
        run: |
          echo "==> Liste des fichiers :"
          ls -la
          echo "==> Contenu du terraform.tfstate :"
          cat terraform.tfstate | head -n 20

      # - name: Debug terraform output
      #   working-directory: ./terraform
      #   run: terraform output

      - name: Get EC2 IP from Terraform output
        working-directory: ./terraform
        run: |
          terraform init -input=false -no-color
          terraform output -raw instance_ip > ../ansible/host_ip.txt

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Create Ansible inventory
        run: |
          IP=$(cat ansible/host_ip.txt)
          echo "[monitoring]" > ansible/hosts
          echo "$IP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/hosts

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: ansible-playbook -i hosts playbooks/playbook.yml

      - name: Installer Grafana
        ansible.builtin.apt:
          name: grafana
          state: present
          update_cache: yes

      - name: Activer et démarrer Grafana
        ansible.builtin.systemd:
          name: grafana-server
          enabled: yes
          state: started

      - name: Vérifier que Grafana écoute sur le bon port
        ansible.builtin.shell: sudo netstat -tuln | grep 3000
        register: grafana_port_check
        ignore_errors: true

      - name: Afficher le résultat de netstat pour Grafana
        ansible.builtin.debug:
          var: grafana_port_check.stdout
